[
  {
    "Pergunta": "Mostre todos os domínios cadastrados.",
    "SQL": "SELECT * FROM dominio;"
  },
  {
    "Pergunta": "Liste os códigos e descrições dos domínios.",
    "SQL": "SELECT codigo, descricao FROM dominio;"
  },
  {
    "Pergunta": "Qual domínio tem o código {codigoDominio}?",
    "SQL": "SELECT * FROM dominio WHERE codigo = @codigoDominio;"
  },
  {
    "Pergunta": "Quais domínios possuem o valor {valorClassid} no campo 'classid'?",
    "SQL": "SELECT * FROM dominio WHERE classid = @valorClassid;"
  },
  {
    "Pergunta": "Mostre todos os itens de domínio que pertencem ao domínio com ID {dominioId}.",
    "SQL": "SELECT * FROM itemdominio WHERE dominioid = @dominioId;"
  },
  {
    "Pergunta": "Liste a sigla e a descrição dos itens do domínio com ID {dominioId}.",
    "SQL": "SELECT sigla, descricao FROM itemdominio WHERE dominioid = @dominioId;"
  },
  {
    "Pergunta": "Quais itens de domínio possuem o código {codigoItem}?",
    "SQL": "SELECT * FROM itemdominio WHERE codigo = @codigoItem;"
  },
  {
    "Pergunta": "Mostre todos os registros de pessoas físicas.",
    "SQL": "SELECT * FROM pessoa WHERE classid = 101;"
  },
  {
    "Pergunta": "Mostre todos os registros de pessoas jurídicas.",
    "SQL": "SELECT * FROM pessoa WHERE classid = 102;"
  },
  {
    "Pergunta": "Liste todas as pessoas do sexo masculino.",
    "SQL": "SELECT * FROM pessoa WHERE sexo = 1;"
  },
  {
    "Pergunta": "Liste todas as pessoas do sexo feminino.",
    "SQL": "SELECT * FROM pessoa WHERE sexo = 2;"
  },
  {
    "Pergunta": "Mostre os nomes e e-mails das pessoas nascidas depois de {dataInicio}.",
    "SQL": "SELECT nome, email FROM pessoa WHERE dtnascimentooucriacao > @dataInicio;"
  },
  {
    "Pergunta": "Encontre a pessoa cujo CPF/CNPJ seja {cpfCnpj}.",
    "SQL": "SELECT * FROM pessoa WHERE cpfcnpj = @cpfCnpj;"
  },
  {
    "Pergunta": "Liste todas as pessoas, ordenadas pelo nome em ordem alfabética.",
    "SQL": "SELECT * FROM pessoa ORDER BY nome ASC;"
  },
  {
    "Pergunta": "Quantas pessoas estão cadastradas no sistema?",
    "SQL": "SELECT COUNT(*) FROM pessoa;"
  },
  {
    "Pergunta": "Mostre todas as associações do tipo 'Pai'.",
    "SQL": "SELECT * FROM associacaopessoa WHERE tipo = 1;"
  },
  {
    "Pergunta": "Mostre todas as associações do tipo 'Mãe'.",
    "SQL": "SELECT * FROM associacaopessoa WHERE tipo = 2;"
  },
  {
    "Pergunta": "Mostre todas as associações do tipo 'Responsável'.",
    "SQL": "SELECT * FROM associacaopessoa WHERE tipo = 3;"
  },
  {
    "Pergunta": "Liste as associações que envolvem a pessoa com ID {pessoaId}.",
    "SQL": "SELECT * FROM associacaopessoa WHERE pessoaid = @pessoaId OR pessoaassociadaid = @pessoaId;"
  },
  {
    "Pergunta": "Liste os nomes das pessoas e o tipo de associação, considerando apenas associações de 'Pai' e 'Mãe'.",
    "SQL": "SELECT p.nome, a.tipo FROM associacaopessoa a JOIN pessoa p ON a.pessoaid = p.objectid WHERE a.tipo IN (1, 2);"
  },
  {
    "Pergunta": "Quais são os identificadores e nomes das pessoas associadas à pessoa com ID {pessoaId}?",
    "SQL": "SELECT p.objectid, p.nome FROM pessoa p JOIN associacaopessoa a ON p.objectid = a.pessoaassociadaid WHERE a.pessoaid = @pessoaId;"
  },
  {
    "Pergunta": "Liste todas as pessoas que não possuem associações registradas.",
    "SQL": "SELECT * FROM pessoa WHERE objectid NOT IN (SELECT pessoaid FROM associacaopessoa) AND objectid NOT IN (SELECT pessoaassociadaid FROM associacaopessoa);"
  },
  {
    "Pergunta": "Mostre os domínios e a quantidade de itens associados a cada um.",
    "SQL": "SELECT d.objectid, d.descricao, COUNT(i.objectid) AS total_itens FROM dominio d LEFT JOIN itemdominio i ON d.objectid = i.dominioid GROUP BY d.objectid, d.descricao;"
  },
  {
    "Pergunta": "Liste os itens de domínio junto com o nome do domínio a que pertencem.",
    "SQL": "SELECT i.objectid, i.sigla, i.descricao, d.descricao AS dominio FROM itemdominio i JOIN dominio d ON i.dominioid = d.objectid;"
  },
  {
    "Pergunta": "Liste os e-mails das pessoas que possuem e-mail cadastrado.",
    "SQL": "SELECT email FROM pessoa WHERE email IS NOT NULL AND email <> '';"
  },
  {
    "Pergunta": "Qual é o domínio com o maior código?",
    "SQL": "SELECT * FROM dominio ORDER BY codigo DESC LIMIT 1;"
  },
  {
    "Pergunta": "Liste as pessoas que possuem telefone cadastrado.",
    "SQL": "SELECT * FROM pessoa WHERE telefone IS NOT NULL AND telefone <> '';"
  },
  {
    "Pergunta": "Quantas associações existem para cada tipo?",
    "SQL": "SELECT tipo, COUNT(*) AS total FROM associacaopessoa GROUP BY tipo;"
  },
  {
    "Pergunta": "Liste as pessoas cujo nome começa com a letra {inicial}.",
    "SQL": "SELECT * FROM pessoa WHERE nome ILIKE @inicial || '%';"
  },
  {
    "Pergunta": "Liste os domínios cuja descrição contém a palavra {palavraChave}.",
    "SQL": "SELECT * FROM dominio WHERE descricao ILIKE '%' || @palavraChave || '%';"
  },
  {
    "Pergunta": "Liste os itens de domínio cuja sigla contém {palavraChave}.",
    "SQL": "SELECT * FROM itemdominio WHERE sigla ILIKE '%' || @palavraChave || '%';"
  },
  {
    "Pergunta": "Liste as pessoas nascidas no ano {ano}.",
    "SQL": "SELECT * FROM pessoa WHERE EXTRACT(YEAR FROM dtnascimentooucriacao) = @ano;"
  },
  {
    "Pergunta": "Liste os primeiros {limite} registros da tabela de pessoas.",
    "SQL": "SELECT * FROM pessoa LIMIT @limite;"
  },
  {
    "Pergunta": "Liste as últimas {limite} pessoas cadastradas, ordenando pela data de nascimento/criação.",
    "SQL": "SELECT * FROM pessoa ORDER BY dtnascimentooucriacao DESC LIMIT @limite;"
  },
  {
    "Pergunta": "Liste os domínios e seus códigos, ordenados em ordem crescente pelo código.",
    "SQL": "SELECT codigo, descricao FROM dominio ORDER BY codigo ASC;"
  },
  {
    "Pergunta": "Liste as associações onde o tipo é 'Responsável'.",
    "SQL": "SELECT * FROM associacaopessoa WHERE tipo = 3;"
  },
  {
    "Pergunta": "Liste os nomes das pessoas que são pais e nasceram depois de {dataInicio}.",
    "SQL": "SELECT p.nome FROM pessoa p JOIN associacaopessoa a ON p.objectid = a.pessoaid WHERE a.tipo = 1 AND p.dtnascimentooucriacao > @dataInicio;"
  },
  {
    "Pergunta": "Liste os e-mails das pessoas cujo CPF/CNPJ começa com {prefixo}.",
    "SQL": "SELECT email FROM pessoa WHERE cpfcnpj ILIKE @prefixo || '%';"
  },
  {
    "Pergunta": "Liste os itens de domínio que possuem o valor {classidItem} no campo 'classid'.",
    "SQL": "SELECT * FROM itemdominio WHERE classid = @classidItem;"
  },
  {
    "Pergunta": "Quantos itens de domínio estão cadastrados?",
    "SQL": "SELECT COUNT(*) FROM itemdominio;"
  },
  {
    "Pergunta": "Liste os domínios que não têm nenhum item de domínio associado.",
    "SQL": "SELECT * FROM dominio WHERE objectid NOT IN (SELECT DISTINCT dominioid FROM itemdominio);"
  },
  {
    "Pergunta": "Liste todas as pessoas, ordenadas pelo e-mail.",
    "SQL": "SELECT * FROM pessoa ORDER BY email ASC;"
  },
  {
    "Pergunta": "Liste os nomes e telefones das pessoas do sexo feminino.",
    "SQL": "SELECT nome, telefone FROM pessoa WHERE sexo = 2;"
  },
  {
    "Pergunta": "Encontre as pessoas cujo nome contém {parteNome}.",
    "SQL": "SELECT * FROM pessoa WHERE nome ILIKE '%' || @parteNome || '%';"
  },
  {
    "Pergunta": "Liste os identificadores e códigos dos domínios para verificação.",
    "SQL": "SELECT objectid, codigo FROM dominio;"
  },
  {
    "Pergunta": "Liste os itens de domínio que não possuem descrição.",
    "SQL": "SELECT * FROM itemdominio WHERE descricao IS NULL OR descricao = '';"
  },
  {
    "Pergunta": "Liste as associações em que a pessoa associada tem o e-mail {emailPessoa}.",
    "SQL": "SELECT a.* FROM associacaopessoa a JOIN pessoa p ON a.pessoaassociadaid = p.objectid WHERE p.email = @emailPessoa;"
  },
  {
    "Pergunta": "Liste as pessoas com data de nascimento/criação entre {dataInicio} e {dataFim}.",
    "SQL": "SELECT * FROM pessoa WHERE dtnascimentooucriacao BETWEEN @dataInicio AND @dataFim;"
  },
  {
    "Pergunta": "Liste todas as associações, ordenadas pelo tipo.",
    "SQL": "SELECT * FROM associacaopessoa ORDER BY tipo ASC;"
  },
  {
    "Pergunta": "Liste todos os itens de domínio, ordenados pela sigla.",
    "SQL": "SELECT * FROM itemdominio ORDER BY sigla ASC;"
  },
  {
    "Pergunta": "Atualize a descrição do domínio para {novaDescricao} onde o código for igual a {codigo}.",
    "SQL": "UPDATE dominio SET descricao = @novaDescricao WHERE codigo = @codigo;"
  },
  {
    "Pergunta": "Altere o código do domínio para {novoCodigo} no registro com o identificador {objectidDominio}.",
    "SQL": "UPDATE dominio SET codigo = @novoCodigo WHERE objectid = @objectidDominio;"
  },
  {
    "Pergunta": "Mude a descrição do item de domínio para {novaDescricaoItem} no registro com identificador {objectidItem}.",
    "SQL": "UPDATE itemdominio SET descricao = @novaDescricaoItem WHERE objectid = @objectidItem;"
  },
  {
    "Pergunta": "Atualize a sigla do item de domínio para {novaSigla} no registro com identificador {objectidItem}.",
    "SQL": "UPDATE itemdominio SET sigla = @novaSigla WHERE objectid = @objectidItem;"
  },
  {
    "Pergunta": "Altere o código do item de domínio para {novoCodigoItem} no registro com identificador {objectidItem}.",
    "SQL": "UPDATE itemdominio SET codigo = @novoCodigoItem WHERE objectid = @objectidItem;"
  },
  {
    "Pergunta": "Atualize o nome da pessoa para {novoNome} onde o CPF/CNPJ for igual a {cpfcnpj}.",
    "SQL": "UPDATE pessoa SET nome = @novoNome WHERE cpfcnpj = @cpfcnpj;"
  },
  {
    "Pergunta": "Mude o e-mail da pessoa para {novoEmail} no registro com identificador {objectidPessoa}.",
    "SQL": "UPDATE pessoa SET email = @novoEmail WHERE objectid = @objectidPessoa;"
  },
  {
    "Pergunta": "Atualize o telefone da pessoa para {novoTelefone} no registro com identificador {objectidPessoa}.",
    "SQL": "UPDATE pessoa SET telefone = @novoTelefone WHERE objectid = @objectidPessoa;"
  },
  {
    "Pergunta": "Altere a data de nascimento ou criação da pessoa para {novaData} no registro com identificador {objectidPessoa}.",
    "SQL": "UPDATE pessoa SET dtnascimentooucriacao = @novaData WHERE objectid = @objectidPessoa;"
  },
  {
    "Pergunta": "Atualize o sexo da pessoa para {novoSexo} (1 para masculino, 2 para feminino) no registro com identificador {objectidPessoa}.",
    "SQL": "UPDATE pessoa SET sexo = @novoSexo WHERE objectid = @objectidPessoa;"
  },
  {
    "Pergunta": "Mude o tipo de pessoa para {novoClassid} (101 para PF, 102 para PJ) no registro com identificador {objectidPessoa}.",
    "SQL": "UPDATE pessoa SET classid = @novoClassid WHERE objectid = @objectidPessoa;"
  },
  {
    "Pergunta": "Altere o CPF/CNPJ da pessoa para {novoCpfCnpj} no registro com identificador {objectidPessoa}.",
    "SQL": "UPDATE pessoa SET cpfcnpj = @novoCpfCnpj WHERE objectid = @objectidPessoa;"
  },
  {
    "Pergunta": "Atualize o tipo de associação para {novoTipo} (1: Pai, 2: Mãe, 3: Responsável) no registro com identificador {objectidAssociacao}.",
    "SQL": "UPDATE associacaopessoa SET tipo = @novoTipo WHERE objectid = @objectidAssociacao;"
  },
  {
    "Pergunta": "Mude o identificador da pessoa principal para {novoPessoaid} na associação com identificador {objectidAssociacao}.",
    "SQL": "UPDATE associacaopessoa SET pessoaid = @novoPessoaid WHERE objectid = @objectidAssociacao;"
  },
  {
    "Pergunta": "Altere o identificador da pessoa associada para {novaPessoaAssociadaid} na associação com identificador {objectidAssociacao}.",
    "SQL": "UPDATE associacaopessoa SET pessoaassociadaid = @novaPessoaAssociadaid WHERE objectid = @objectidAssociacao;"
  },
  {
    "Pergunta": "Atualize o tipo de registro do item de domínio para {novoClassidItem} no registro com identificador {objectidItem}.",
    "SQL": "UPDATE itemdominio SET classid = @novoClassidItem WHERE objectid = @objectidItem;"
  },
  {
    "Pergunta": "Mude a descrição do domínio para {novaDescricao} no registro com identificador {objectidDominio}.",
    "SQL": "UPDATE dominio SET descricao = @novaDescricao WHERE objectid = @objectidDominio;"
  },
  {
    "Pergunta": "Altere o código do domínio para {novoCodigo} no registro com identificador {objectidDominio}.",
    "SQL": "UPDATE dominio SET codigo = @novoCodigo WHERE objectid = @objectidDominio;"
  },
  {
    "Pergunta": "Atualize a sigla do item de domínio para {novaSigla} onde o domínio for {dominioid} e o código do item for {codigoItem}.",
    "SQL": "UPDATE itemdominio SET sigla = @novaSigla WHERE dominioid = @dominioid AND codigo = @codigoItem;"
  },
  {
    "Pergunta": "Mude a descrição do item de domínio para {novaDescricaoItem} onde o domínio for {dominioid} e o código do item for {codigoItem}.",
    "SQL": "UPDATE itemdominio SET descricao = @novaDescricaoItem WHERE dominioid = @dominioid AND codigo = @codigoItem;"
  },
  {
    "Pergunta": "Atualize o nome da pessoa para {novoNome} onde o e-mail atual for {emailAtual}.",
    "SQL": "UPDATE pessoa SET nome = @novoNome WHERE email = @emailAtual;"
  },
  {
    "Pergunta": "Altere o e-mail da pessoa para {novoEmail} onde o CPF/CNPJ for {cpfcnpj}.",
    "SQL": "UPDATE pessoa SET email = @novoEmail WHERE cpfcnpj = @cpfcnpj;"
  },
  {
    "Pergunta": "Mude o telefone da pessoa para {novoTelefone} onde o CPF/CNPJ for {cpfcnpj}.",
    "SQL": "UPDATE pessoa SET telefone = @novoTelefone WHERE cpfcnpj = @cpfcnpj;"
  },
  {
    "Pergunta": "Atualize a data de nascimento ou criação da pessoa para {novaData} onde o CPF/CNPJ for {cpfcnpj}.",
    "SQL": "UPDATE pessoa SET dtnascimentooucriacao = @novaData WHERE cpfcnpj = @cpfcnpj;"
  },
  {
    "Pergunta": "Altere o sexo da pessoa para {novoSexo} (1 para masculino, 2 para feminino) onde o CPF/CNPJ for {cpfcnpj}.",
    "SQL": "UPDATE pessoa SET sexo = @novoSexo WHERE cpfcnpj = @cpfcnpj;"
  },
  {
    "Pergunta": "Atualize o tipo de pessoa para {novoClassid} (101 para PF, 102 para PJ) onde o CPF/CNPJ for {cpfcnpj}.",
    "SQL": "UPDATE pessoa SET classid = @novoClassid WHERE cpfcnpj = @cpfcnpj;"
  },
  {
    "Pergunta": "Mude o CPF/CNPJ da pessoa para {novoCpfCnpj} onde o e-mail atual for {emailAtual}.",
    "SQL": "UPDATE pessoa SET cpfcnpj = @novoCpfCnpj WHERE email = @emailAtual;"
  },
  {
    "Pergunta": "Atualize o tipo de associação para {novoTipo} na associação identificada pelo e-mail da pessoa principal {emailPrincipal}.",
    "SQL": "UPDATE associacaopessoa SET tipo = @novoTipo WHERE pessoaid IN (SELECT objectid FROM pessoa WHERE email = @emailPrincipal);"
  },
  {
    "Pergunta": "Mude a pessoa associada para {novaPessoaAssociadaid} na associação identificada pelo e-mail da pessoa associada {emailAssociada}.",
    "SQL": "UPDATE associacaopessoa SET pessoaassociadaid = @novaPessoaAssociadaid WHERE pessoaassociadaid IN (SELECT objectid FROM pessoa WHERE email = @emailAssociada);"
  }
]
